swagger: '2.0'
info:
  title: User Image Management Service
  description: API for managing users, teams, and images with API key authentication
  version: 1.0.0
host: user-image-service-xxxx-xx.a.run.app  # This will be replaced during deployment
schemes:
  - https
produces:
  - application/json
securityDefinitions:
  api_key:
    type: apiKey
    name: X-API-Key
    in: header
security:
  - api_key: []
paths:
  /teams:
    post:
      summary: Create a new team
      operationId: createTeam
      security:
        - api_key: []
      consumes:
        - application/json
      parameters:
        - in: body
          name: team
          schema:
            $ref: '#/definitions/TeamCreate'
      responses:
        '201':
          description: Team created successfully
          schema:
            $ref: '#/definitions/Team'
        '400':
          description: Invalid team data
        '401':
          description: Unauthorized
    get:
      summary: List teams
      operationId: listTeams
      security:
        - api_key: []
      parameters:
        - in: query
          name: skip
          type: integer
          default: 0
        - in: query
          name: limit
          type: integer
          default: 10
      responses:
        '200':
          description: List of teams
          schema:
            type: array
            items:
              $ref: '#/definitions/Team'
        '401':
          description: Unauthorized
  
  /teams/{team_id}:
    get:
      summary: Get team by ID
      operationId: getTeam
      security:
        - api_key: []
      parameters:
        - in: path
          name: team_id
          required: true
          type: string
      responses:
        '200':
          description: Team details
          schema:
            $ref: '#/definitions/Team'
        '401':
          description: Unauthorized
        '404':
          description: Team not found
    put:
      summary: Update team
      operationId: updateTeam
      security:
        - api_key: []
      consumes:
        - application/json
      parameters:
        - in: path
          name: team_id
          required: true
          type: string
        - in: body
          name: team
          schema:
            $ref: '#/definitions/TeamBase'
      responses:
        '200':
          description: Team updated successfully
          schema:
            $ref: '#/definitions/Team'
        '400':
          description: Invalid team data
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Team not found
    delete:
      summary: Delete team
      operationId: deleteTeam
      security:
        - api_key: []
      parameters:
        - in: path
          name: team_id
          required: true
          type: string
      responses:
        '204':
          description: Team deleted successfully
        '400':
          description: Cannot delete team with active users
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Team not found
  
  /users:
    post:
      summary: Create a new user
      operationId: createUser
      security:
        - api_key: []
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            $ref: '#/definitions/UserBase'
      responses:
        '201':
          description: User created successfully
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid user data
        '401':
          description: Unauthorized
        '404':
          description: Team not found
    get:
      summary: List users
      operationId: listUsers
      security:
        - api_key: []
      parameters:
        - in: query
          name: skip
          type: integer
          default: 0
        - in: query
          name: limit
          type: integer
          default: 10
        - in: query
          name: team_id
          type: string
      responses:
        '200':
          description: List of users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '401':
          description: Unauthorized
  
  /users/{user_id}:
    get:
      summary: Get user by ID
      operationId: getUser
      security:
        - api_key: []
      parameters:
        - in: path
          name: user_id
          required: true
          type: string
      responses:
        '200':
          description: User details
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found
    put:
      summary: Update user
      operationId: updateUser
      security:
        - api_key: []
      consumes:
        - application/json
      parameters:
        - in: path
          name: user_id
          required: true
          type: string
        - in: body
          name: user
          schema:
            $ref: '#/definitions/UserBase'
      responses:
        '200':
          description: User updated successfully
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid user data
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found
    delete:
      summary: Delete user
      operationId: deleteUser
      security:
        - api_key: []
      parameters:
        - in: path
          name: user_id
          required: true
          type: string
      responses:
        '204':
          description: User deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found
  
  /teams/{team_id}/images:
    post:
      summary: Upload image to team
      operationId: uploadTeamImage
      security:
        - api_key: []
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: team_id
          required: true
          type: string
        - in: formData
          name: title
          type: string
        - in: formData
          name: description
          type: string
        - in: formData
          name: tags
          type: string
          description: Comma-separated list of tags
        - in: formData
          name: file
          type: string
          required: true
      responses:
        '201':
          description: Image uploaded successfully
          schema:
            $ref: '#/definitions/Image'
        '400':
          description: Invalid image data
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Team not found
    get:
      summary: List team images
      operationId: listTeamImages
      security:
        - api_key: []
      parameters:
        - in: path
          name: team_id
          required: true
          type: string
        - in: query
          name: skip
          type: integer
          default: 0
        - in: query
          name: limit
          type: integer
          default: 10
      responses:
        '200':
          description: List of images
          schema:
            type: array
            items:
              $ref: '#/definitions/Image'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Team not found
  
  /teams/{team_id}/images/{image_id}:
    get:
      summary: Get team image by ID
      operationId: getTeamImage
      security:
        - api_key: []
      parameters:
        - in: path
          name: team_id
          required: true
          type: string
        - in: path
          name: image_id
          required: true
          type: string
      responses:
        '200':
          description: Image details
          schema:
            $ref: '#/definitions/Image'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Image not found
    put:
      summary: Update team image
      operationId: updateTeamImage
      security:
        - api_key: []
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - in: path
          name: team_id
          required: true
          type: string
        - in: path
          name: image_id
          required: true
          type: string
        - in: formData
          name: title
          type: string
        - in: formData
          name: description
          type: string
        - in: formData
          name: tags
          type: string
          description: Comma-separated list of tags
      responses:
        '200':
          description: Image updated successfully
          schema:
            $ref: '#/definitions/Image'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Image not found
    delete:
      summary: Delete team image
      operationId: deleteTeamImage
      security:
        - api_key: []
      parameters:
        - in: path
          name: team_id
          required: true
          type: string
        - in: path
          name: image_id
          required: true
          type: string
      responses:
        '204':
          description: Image deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Image not found
  
  /audit-logs:
    get:
      summary: List audit logs
      operationId: listAuditLogs
      security:
        - api_key: []
      parameters:
        - in: query
          name: skip
          type: integer
          default: 0
        - in: query
          name: limit
          type: integer
          default: 50
        - in: query
          name: user_id
          type: string
        - in: query
          name: resource_type
          type: string
        - in: query
          name: action
          type: string
        - in: query
          name: status
          type: string
        - in: query
          name: from_date
          type: string
          format: date-time
        - in: query
          name: to_date
          type: string
          format: date-time
      responses:
        '200':
          description: List of audit logs
          schema:
            type: array
            items:
              $ref: '#/definitions/AuditLog'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

definitions:
  TeamBase:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
    required:
      - name
  
  TeamCreate:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
    required:
      - name
  
  Team:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      created_at:
        type: string
        format: date-time
    required:
      - id
      - name
      - created_at
  
  UserBase:
    type: object
    properties:
      username:
        type: string
      email:
        type: string
      team_id:
        type: string
      full_name:
        type: string
    required:
      - username
      - email
      - team_id
  
  User:
    type: object
    properties:
      id:
        type: string
      username:
        type: string
      email:
        type: string
      full_name:
        type: string
      team_id:
        type: string
      created_at:
        type: string
        format: date-time
    required:
      - id
      - username
      - email
      - team_id
      - created_at
  
  ImageMetadata:
    type: object
    properties:
      width:
        type: integer
      height:
        type: integer
      format:
        type: string
      color_space:
        type: string
      location:
        type: string
      tags:
        type: array
        items:
          type: string
      camera_model:
        type: string
      capture_date:
        type: string
        format: date-time
  
  ImageBase:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
  
  Image:
    type: object
    properties:
      id:
        type: string
      user_id:
        type: string
      team_id:
        type: string
      title:
        type: string
      description:
        type: string
      filename:
        type: string
      content_type:
        type: string
      size:
        type: integer
      url:
        type: string
      metadata:
        $ref: '#/definitions/ImageMetadata'
      created_at:
        type: string
        format: date-time
    required:
      - id
      - user_id
      - team_id
      - filename
      - content_type
      - size
      - url
      - created_at
  
    type: object
    properties:
      id:
        type: string
      user_id:
        type: string
      action:
        type: string
      resource_type:
        type: string
      resource_id:
        type: string
      status:
        type: string
      status_code:
        type: integer
      ip_address:
        type: string
      user_agent:
        type: string
      details:
        type: object
      timestamp:
        type: string
        format: date-time
    required:
      - id
      - action
      - resource_type
      - status
      - status_code
      - ip_address
      - timestamp